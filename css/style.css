*{
    margin: 0;
    padding: 0;
}

#flex-display{
    display: flex; /*Ativa o display flex*/
    background-color: aqua;
    min-height: 100vh;
    width: 100%;

    /*Direções

    flex-direction: row-reverse; - Faz a direção do bloco ser da esquerda pra direita em vez do padrão que é da esquerda para direita
    flex-direction: column; - A direção passa a ser de cima para baixo
    flex-direction: column-reverse; - A direção passa a ser de baixo para cima*/


    /*Justify-content

    justify-content: flex-end; Alinha o contéudo no final do display , o padrão é o flex-start
    justify-content: center; Alinha o contéudo no meio do display
    justify-content: space-between; Cria um espaço entre os elementos na horizontal dividindo igualmente o espaço
    justify-content: space-around; Cria um espaço aos lados de cada elemento*/


    /*Align-items

    align-items: flex-start;  Alinha os contéudos no topo do display
    align-items: flex-end;  Alinha os contéudos na parte de baixo do display
    align-items: stretch; estica os contéudos
    align-items: center; centraliza os contéudos*/

    justify-content: space-around;
    & h1{
        display: flex;
        align-self: center;
        font-size: 50px;
        border: 2px solid white;
    }

    & .imagens{
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        
    }

    & #front{
        
        display: flex;
        border: 2px dashed white;
        width: 350px;
        height: 100px;
        justify-content: space-around;
        align-self: flex-start;
        align-items: center;

        & img{
            height: 80px;
            width: 65px;
            border: 2px solid blueviolet;
        }

        /*

        & #self {
            display: flex;
            align-self: flex-start; "align-self" - Você meio que sobre-escrever alguma função para algum elemento fazendo com que fique diferente dos demais elementos
        }
        Em vez de criar um id/class e fazer as alterações por ela, pode fazer pelo seguinte jeito: 

        "& img:nth-of-type(2){
            display: flex;
            flex-grow: 3;"
        }

        O "img:nth-of-type(2)" faz com que a cada duas imagens a segunda sofra as alterações. O flex-grow fala o quanto elemento vai crescer com relação ao resto dos flex elementos dentro do espaço (vai de 0 até 10,)padrão é 0 */
        

    }
    

    & #back{
        display: flex;
        border: 2px dashed white;
        justify-content: space-between;
        width: 350px;
        height: 100px;

        & img{
            display: flex;   
            height: 80px;
            width: 65px;
            border: 2px solid blueviolet;
            align-self: center;
            
        }
        /*
        & img:nth-of-type(2){
            flex-shrink: 8;
        } A função shrink é o oposto do flex-grow. e funciona apenas quando não tem mais espaço para os componentes, é bom com responsabilidade pelo jeito o padrão é zero também */
    }
    

    
}

